openapi: 3.0.0
info:
  title: STD23022 - TD1
  version: 1.0.0

servers:
  - url: https://localhost.std23022.com

paths:
  /customers:
    get:
      summary: Retrieve a list of customers
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: true
          schema:
            type: integer
            example: 1
        - name: pageSize
          in: query
          description: Number of customers per page
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
              examples:
                example1:
                  summary: An example of a customer list response
                  value:
                    - id: "123"
                      name: "Alice"
                      age: 30
                    - id: "456"
                      name: "Bob"
                      age: 25
        '400':
          description: Bad request

    post:
      summary: Create new customers
      requestBody:
        description: List of customers to create
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerCreate'
      responses:
        '201':
          description: Customers created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '400':
          description: Bad request

    put:
      summary: Update existing customers
      requestBody:
        description: List of customers with updates
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerUpdate'
      responses:
        '200':
          description: Customers updated successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '400':
          description: Bad request

    delete:
      summary: Delete customers
      requestBody:
        description: List of customer IDs to delete
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Customers deleted successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '400':
          description: Bad request

  /customers/{customerId}/orders:
    get:
      summary: Retrieve a list of orders for a specific customer
      parameters:
        - name: customerId
          in: path
          description: ID of the customer to retrieve orders for
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination
          required: true
          schema:
            type: integer
            example: 1
        - name: pageSize
          in: query
          description: Number of orders per page
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: A list of orders for the specified customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Bad request

    post:
      summary: Create a new order for a specific customer
      parameters:
        - name: customerId
          in: path
          description: ID of the customer to create an order for
          required: true
          schema:
            type: string
      requestBody:
        description: Order to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request

    put:
      summary: Update an existing order for a specific customer
      parameters:
        - name: customerId
          in: path
          description: ID of the customer whose order is being updated
          required: true
          schema:
            type: string
      requestBody:
        description: Order with updated details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdate'
      responses:
        '200':
          description: Order updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the customer
          example: "123"
        name:
          type: string
          description: Name of the customer
          example: "Alice"
        age:
          type: integer
          description: Age of the customer
          example: 30
      required:
        - id
        - name
        - age

    CustomerCreate:
      type: object
      properties:
        name:
          type: string
          description: Name of the customer
          example: "Alice"
        age:
          type: integer
          description: Age of the customer
          example: 30
      required:
        - name
        - age

    CustomerUpdate:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the customer
          example: "123"
        name:
          type: string
          description: Name of the customer
          example: "Alice"
        age:
          type: integer
          description: Age of the customer
          example: 30
      required:
        - id

    Meal:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the meal
          example: "m123"
        name:
          type: string
          description: Name of the meal
          example: "Pasta"
        price:
          type: number
          format: float
          description: Price of the meal
          example: 12.99
      required:
        - id
        - name
        - price

    Order:
      type: object
      properties:
        reference:
          type: string
          description: Unique reference for the order
          example: "ORD12345"
        meals:
          type: array
          items:
            type: object
            properties:
              mealId:
                type: string
                description: ID of the meal
                example: "m123"
              quantity:
                type: integer
                description: Quantity of the meal ordered
                example: 2
          description: List of meals in the order
        orderDatetime:
          type: string
          format: date-time
          description: Date and time when the order was placed
          example: "2024-08-30T10:30:00Z"
      required:
        - reference
        - meals
        - orderDatetime

    OrderCreate:
      type: object
      properties:
        meals:
          type: array
          items:
            type: object
            properties:
              mealId:
                type: string
                description: ID of the meal
                example: "m123"
              quantity:
                type: integer
                description: Quantity of the meal ordered
                example: 2
          description: List of meals to be included in the order
        orderDatetime:
          type: string
          format: date-time
          description: Date and time when the order was placed
          example: "2024-08-30T10:30:00Z"
      required:
        - meals
        - orderDatetime

    OrderUpdate:
      type: object
      properties:
        reference:
          type: string
          description: Unique reference for the order
          example: "ORD12345"
        meals:
          type: array
          items:
            type: object
            properties:
              mealId:
                type: string
                description: ID of the meal
                example: "m123"
              quantity:
                type: integer
                description: Quantity of the meal ordered
                example: 2
          description: Updated list of meals in the order
        orderDatetime:
          type: string
          format: date-time
          description: Updated date and time of the order
          example: "2024-08-30T10:30:00Z"
      required:
        - reference
        - meals
        - orderDatetime
